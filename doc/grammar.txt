##############################################
##########          ADAOS       ##############
##############################################
EBNF:
execution-seq	::= execution (; execution)*
execution		::= command-name argument*
argument		::= word | "inner-double" | 'inner-single'
inner-double	::= ('inner-single' | word)*
inner-single	::= ("inner-double" | word)*
command-name	::= word
word			::= (letter | digigt | _)(letter | digigt | _ | -)*
letter			::= [a-z] | [A-Z]
digit			::= [0-9]







Adaos - Adaos Debugging And Operation Shell


BNF:
execution-seq	::= execution execution-seq-f
execution-seq-f	::= execution-sepa execution execution-seq-f | epsilon	
execution-sepa  ::= '|' | ; | ,
execution	    ::= environment-seq command-name argument-seq
command-name    ::= word
environment-seq ::= environment . environment-seq | environment
environment		::= word
argument-seq	::= argument argument-seq | epsilon
argument		::= value | argument-name:value
argument-name   ::= word
value           ::= word | nested-words | $word | $nested-words | '('execution-seq')' | $'('execution-seq')'
nested-words	::= "inner-double" | 'inner-single'
inner-double	::= 'inner-single' inner-double | word inner-double | epsilon
inner-single	::= "inner-double" inner-single | word inner-single | epsilon
word			::= (letter | digit | _ | -)word-follow
word-follow		::= (letter | digit | _ | -)word-follow | epsilon
letter			::= [a-z] | [A-Z]
digit			::= [0-9]

user.create aba @'math.random mode char 10 12' abondoa@gmail.com




TODO:
Make core envs:
 - io/console: read?
 - Scope for variables
 - math
 - parallel: perfom loopish stuff in parallel
